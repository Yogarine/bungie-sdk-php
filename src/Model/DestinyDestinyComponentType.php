<?php
/**
 * DestinyDestinyComponentType
 *
 * PHP version 5
 *
 * @category Class
 * @package  Bungie
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Bungie\Model;
use \Bungie\ObjectSerializer;

/**
 * DestinyDestinyComponentType Class Doc Comment
 *
 * @category Class
 * @description Represents the possible components that can be returned from Destiny \&quot;Get\&quot; calls such as GetProfile, GetCharacter, GetVendor etc...  When making one of these requests, you will pass one or more of these components as a comma separated list in the \&quot;?components&#x3D;\&quot; querystring parameter. For instance, if you want baseline Profile data, Character Data, and character progressions, you would pass \&quot;?components&#x3D;Profiles,Characters,CharacterProgressions\&quot; You may use either the numerical or string values.
 * @package  Bungie
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DestinyDestinyComponentType
{
    /**
     * Possible values of this enum
     */
    const NONE = 0;
    const PROFILES = 100;
    const VENDORRECEIPTS = 101;
    const PROFILEINVENTORIES = 102;
    const PROFILECURRENCIES = 103;
    const PROFILEPROGRESSION = 104;
    const CHARACTERS = 200;
    const CHARACTERINVENTORIES = 201;
    const CHARACTERPROGRESSIONS = 202;
    const CHARACTERRENDERDATA = 203;
    const CHARACTERACTIVITIES = 204;
    const CHARACTEREQUIPMENT = 205;
    const ITEMINSTANCES = 300;
    const ITEMOBJECTIVES = 301;
    const ITEMPERKS = 302;
    const ITEMRENDERDATA = 303;
    const ITEMSTATS = 304;
    const ITEMSOCKETS = 305;
    const ITEMTALENTGRIDS = 306;
    const ITEMCOMMONDATA = 307;
    const ITEMPLUGSTATES = 308;
    const VENDORS = 400;
    const VENDORCATEGORIES = 401;
    const VENDORSALES = 402;
    const KIOSKS = 500;
    const CURRENCYLOOKUPS = 600;
    const PRESENTATIONNODES = 700;
    const COLLECTIBLES = 800;
    const RECORDS = 900;
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::NONE,
            self::PROFILES,
            self::VENDORRECEIPTS,
            self::PROFILEINVENTORIES,
            self::PROFILECURRENCIES,
            self::PROFILEPROGRESSION,
            self::CHARACTERS,
            self::CHARACTERINVENTORIES,
            self::CHARACTERPROGRESSIONS,
            self::CHARACTERRENDERDATA,
            self::CHARACTERACTIVITIES,
            self::CHARACTEREQUIPMENT,
            self::ITEMINSTANCES,
            self::ITEMOBJECTIVES,
            self::ITEMPERKS,
            self::ITEMRENDERDATA,
            self::ITEMSTATS,
            self::ITEMSOCKETS,
            self::ITEMTALENTGRIDS,
            self::ITEMCOMMONDATA,
            self::ITEMPLUGSTATES,
            self::VENDORS,
            self::VENDORCATEGORIES,
            self::VENDORSALES,
            self::KIOSKS,
            self::CURRENCYLOOKUPS,
            self::PRESENTATIONNODES,
            self::COLLECTIBLES,
            self::RECORDS,
        ];
    }
}


